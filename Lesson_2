// Task 2.1
public class PrintThreeWords {
    public static void main (String[] args) {
        System.out.println("Orange");
        System.out.println("Banana");
        System.out.println("Apple");
    }
}

// Task 2.2

public class CheckSumSign {
    public static void main (String[] args) {
        int a = -10;
        int b = 5;
        if ((a + b)>=0){
            System.out.println("Сумма положительная");
        } else {
            System.out.println("Сумма отрицательная");
        }
    }
}

// Task 2.3

public class PrintColor {
    public static void main (String[] args) {
        int value = 104;
        if (value <= 0){
            System.out.println("Красный");
        } else if (value > 0 && value <= 100) {
            System.out.println("Желтый");
        } else if (value > 100) {
            System.out.println("Зеленый");
        }
    }
}

// Task 2.4

public class CompareNumbers {
    public static void main (String[] args) {
        int a = 3;
        int b = 6;
        if (a >= b){
            System.out.println("a >= b");
        } else {
            System.out.println("a < b");
        }
    }
}

// Task 2.5

public class TwoNumbersSum {
    public static void main(String[] args) {
        int number1 = 10;
        int number2 = 15;
        System.out.println(numbersSum(number1, number2));
    }

    public static boolean numbersSum(int number1, int number2) {
        int sum = number1 + number2;
        return sum >= 10 && sum <= 20;
    }
}

// Task 2.6

public class NumberCheck {
    public static void main (String[] args) {
        int a = -2;
        if (a >= 0){
            System.out.println("Число положительное");
        } else {
            System.out.println("Число отрицательное");
        }
    }
}

// Task 2.7

public class PosNegNumber {
    public static void main (String[] args) {
        int a = -2;
        System.out.println(negativeCheck(a));
    }

    public static boolean negativeCheck(int number) {
        if (number < 0){
            return true;
        } else {
            return false;
        }
    }
}

// Task 2.8

public class ArgumentCombination {
    public static void main (String[] args) {
        int number = 4;
        String str = "Новая строка";
        printPhrase(str, number);
    }

    public static void printPhrase(String phrase, int times){
        for (int a = 1; a <= times; a++) {
            System.out.println(phrase);
        }
    }
}

// Task 2.9

public class BissextileYear {
    public static void main (String[] args) {
        int year = 1200;
        System.out.println(leapYear(year));
    }

    public static boolean leapYear(int year){
        if ((year % 4 == 0) && (year % 100 != 0) || (year % 400 == 0)) {
            return true;
        } else {
            return false;
        }
    }
}

// Task 2.10

import java.util.Arrays;

public class ArrayChanges {
    public static void main (String[] args) {
        int[] arr = {1, 1, 0, 0, 1, 0, 1, 1, 0, 0};
        System.out.println("Исходник : " + Arrays.toString(arr));

        for (int a = 0; a < arr.length; a++) {
            if (arr[a] == 0){
                arr[a] = 1;
            } else if (arr[a] == 1) {
                arr[a] = 0;
            }
        }
        System.out.println("Изменен на : " + Arrays.toString(arr));
    }
}

// Task 2.11

import java.util.Arrays;

public class EmptyMassive {
    public static void main(String[] args) {
        int[] arr = new int[100];

        for (int a = 0; a < arr.length; a++) {
            arr[a] = a + 1;
        }

        System.out.println("Массив: " + Arrays.toString(arr));
    }
}

// Task 2.12

import java.util.Arrays;

public class MultiplyMassive {
    public static void main(String[] args) {
        int[] array = {1, 5, 3, 2, 11, 4, 5, 2, 4, 8, 9, 1};

        System.out.println("Исходный массив: " + Arrays.toString(array));

        for (int i = 0; i < array.length; i++) {
            if (array[i] < 6) {
                array[i] *= 2;
            }
        }

        System.out.println("Массив с умножением на 2 чисел меньше 6: " + Arrays.toString(array));
    }
}

// Task 2.13

public class SquareMassive {
    public static void main(String[] args) {
        int n = 5;
        int[][] array = new int[n][n];

        for (int i = 0; i < n; i++) {
            array[i][i] = 1;
        }

        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
                System.out.print(array[i][j] + " ");
            }
            System.out.println();
        }
    }
}

// Task 2.14

public class InitMassive {

    public static void main(String[] args) {
        int len = 5;
        int initialValue = 6;
        int[] resultArray = createArray(len, initialValue);

        for (int element : resultArray) {
            System.out.print(element + " ");
        }
    }

    public static int[] createArray(int len, int initialValue) {
        int[] array = new int[len];

        for (int i = 0; i < len; i++) {
            array[i] = initialValue;
        }
        return array;
    }
}
